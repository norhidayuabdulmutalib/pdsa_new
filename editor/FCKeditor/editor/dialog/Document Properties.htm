<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!--
 * FCKeditor - The text editor for internet
 * Copyright (C) 2003-2006 Frederico Caldeira Knabben
 * 
 * Licensed under the terms of the GNU Lesser General Public License:
 * 		http://www.opensource.org/licenses/lgpl-license.php
 * 
 * For further information visit:
 * 		http://www.fckeditor.net/
 * 
 * "Support Open Source software. What about a donation today?"
 * 
 * File Name: fck_docprops.html
 * 	Link dialog window.
 * 
 * File Authors:
 * 		Frederico Caldeira Knabben (fredck@fckeditor.net)
--><HTML><HEAD><TITLE>Document Properties</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="noindex, nofollow" name=robots>
<SCRIPT src="" type=text/javascript></SCRIPT>

<SCRIPT language=javascript>

var oEditor		= window.parent.InnerDialogLoaded() ;
var FCK			= oEditor.FCK ;
var FCKLang		= oEditor.FCKLang ;
var FCKConfig	= oEditor.FCKConfig ;

//#### Dialog Tabs

// Set the dialog tabs.
window.parent.AddTab( 'General'		, FCKLang.DlgDocGeneralTab ) ;
window.parent.AddTab( 'Background'	, FCKLang.DlgDocBackTab ) ;
window.parent.AddTab( 'Colors'		, FCKLang.DlgDocColorsTab ) ;
window.parent.AddTab( 'Meta'		, FCKLang.DlgDocMetaTab ) ;

// Function called when a dialog tag is selected.
function OnDialogTabChange( tabCode )
{
	ShowE( 'divGeneral'		, ( tabCode == 'General' ) ) ;
	ShowE( 'divBackground'	, ( tabCode == 'Background' ) ) ;
	ShowE( 'divColors'		, ( tabCode == 'Colors' ) ) ;
	ShowE( 'divMeta'		, ( tabCode == 'Meta' ) ) ;

	ShowE( 'ePreview'		, ( tabCode == 'Background' || tabCode == 'Colors' ) ) ;
}

//#### Get Base elements from the document: BEGIN

// The HTML element of the document.
var oHTML = FCK.EditorDocument.getElementsByTagName('html')[0] ;

// The HEAD element of the document.
var oHead = oHTML.getElementsByTagName('head')[0] ;

var oBody = FCK.EditorDocument.body ;

// This object contains all META tags defined in the document.
var oMetaTags = new Object() ;

// Get all META tags defined in the document.
var aMetas = oHead.getElementsByTagName('meta') ;

// Loop throw all METAs and put it in the HashTable.
for ( var i = 0 ; i < aMetas.length ; i++ )
{
	// Try to get the "name" attribute.
	var sName = GetAttribute( aMetas[i], 'name', GetAttribute( aMetas[i], '___fcktoreplace:name', '' ) ) ;

	// If no "name", try with the "http-equiv" attribute.
	if ( sName.length == 0 )
	{
		if ( document.all )
		{
			// Get the http-equiv value from the outerHTML.
			var oHttpEquivMatch = aMetas[i].outerHTML.match( oEditor.FCKRegexLib.MetaHttpEquiv ) ;
			if ( oHttpEquivMatch )
				sName = oHttpEquivMatch[1] ;
		}
		else
			sName = GetAttribute( aMetas[i], 'http-equiv', '' ) ;
	}

	if ( sName.length > 0 )
		oMetaTags[ sName.toLowerCase() ] = aMetas[i] ;
}

//#### END

// Set a META tag in the document.
function SetMetadata( name, content, isHttp )
{
	if ( content.length == 0 )
	{
		RemoveMetadata( name ) ;
		return ;
	}

	var oMeta = oMetaTags[ name.toLowerCase() ] ;

	if ( !oMeta )
	{
		oMeta = oHead.appendChild( FCK.EditorDocument.createElement('META') ) ;

		if ( isHttp )
			SetAttribute( oMeta, 'http-equiv', name ) ;
		else
		{
			// On IE, it is not possible to set the "name" attribute of the META tag.
			// So a temporary attribute is used and it is replaced when getting the
			// editor's HTML/XHTML value. This is sad, I know :(
			if ( document.all )
				SetAttribute( oMeta, '___fcktoreplace:name', name ) ;
			else
				SetAttribute( oMeta, 'name', name ) ;
		}

		oMetaTags[ name.toLowerCase() ] = oMeta ;
	}

	oMeta.content = content ;
}

function RemoveMetadata( name )
{
	var oMeta = oMetaTags[ name.toLowerCase() ] ;

	if ( oMeta && oMeta != null )
	{
		oMeta.parentNode.removeChild( oMeta ) ;
		oMetaTags[ name.toLowerCase() ] = null ;
	}
}

function GetMetadata( name )
{
	var oMeta = oMetaTags[ name.toLowerCase() ] ;

	if ( oMeta && oMeta != null )
		return oMeta.content ;
	else
		return '' ;
}

window.onload = function ()
{
	// Show/Hide the "Browse Server" button.
	GetE('tdBrowse').style.display = oEditor.FCKConfig.ImageBrowser ? "" : "none";

	// First of all, translate the dialog box texts
	oEditor.FCKLanguageManager.TranslatePage( document ) ;

	FillFields() ;

	UpdatePreview() ;

	// Show the "Ok" button.
	window.parent.SetOkButton( true ) ;

	window.parent.SetAutoSize( true ) ;
}

function FillFields()
{
	// ### General Info
	GetE('txtPageTitle').value = FCK.EditorDocument.title ;

	GetE('selDirection').value	= GetAttribute( oHTML, 'dir', '' ) ;
	GetE('txtLang').value		= GetAttribute( oHTML, 'xml:lang', GetAttribute( oHTML, 'lang', '' ) ) ;	// "xml:lang" takes precedence to "lang".

	// Character Set Encoding.
//	if ( document.all )
//		var sCharSet = FCK.EditorDocument.charset ;
//	else
		var sCharSet = GetMetadata( 'Content-Type' ) ;

	if ( sCharSet != null && sCharSet.length > 0 )
	{
//		if ( !document.all )
			sCharSet = sCharSet.match( /[^=]*$/ ) ;

		GetE('selCharSet').value = sCharSet ;

		if ( GetE('selCharSet').selectedIndex == -1 )
		{
			GetE('selCharSet').value = '...' ;
			GetE('txtCustomCharSet').value = sCharSet ;

			CheckOther( GetE('selCharSet'), 'txtCustomCharSet' ) ;
		}
	}

	// Document Type.
	if ( FCK.DocTypeDeclaration && FCK.DocTypeDeclaration.length > 0 )
	{
		GetE('selDocType').value = FCK.DocTypeDeclaration ;

		if ( GetE('selDocType').selectedIndex == -1 )
		{
			GetE('selDocType').value = '...' ;
			GetE('txtDocType').value = FCK.DocTypeDeclaration ;

			CheckOther( GetE('selDocType'), 'txtDocType' ) ;
		}
	}

	// Document Type.
	GetE('chkIncXHTMLDecl').checked = ( FCK.XmlDeclaration && FCK.XmlDeclaration.length > 0 ) ;

	// ### Background
	GetE('txtBackColor').value = GetAttribute( oBody, 'bgColor'		, '' ) ;
	GetE('txtBackImage').value = GetAttribute( oBody, 'background'	, '' ) ;
	GetE('chkBackNoScroll').checked = ( GetAttribute( oBody, 'bgProperties', '' ).toLowerCase() == 'fixed' ) ;

	// ### Colors
	GetE('txtColorText').value		= GetAttribute( oBody, 'text'	, '' ) ;
	GetE('txtColorLink').value		= GetAttribute( oBody, 'link'	, '' ) ;
	GetE('txtColorVisited').value	= GetAttribute( oBody, 'vLink'	, '' ) ;
	GetE('txtColorActive').value	= GetAttribute( oBody, 'aLink'	, '' ) ;

	// ### Margins
	GetE('txtMarginTop').value		= GetAttribute( oBody, 'topMargin'		, '' ) ;
	GetE('txtMarginLeft').value		= GetAttribute( oBody, 'leftMargin'		, '' ) ;
	GetE('txtMarginRight').value	= GetAttribute( oBody, 'rightMargin'	, '' ) ;
	GetE('txtMarginBottom').value	= GetAttribute( oBody, 'bottomMargin'	, '' ) ;

	// ### Meta Data
	GetE('txtMetaKeywords').value		= GetMetadata( 'keywords' ) ;
	GetE('txtMetaDescription').value	= GetMetadata( 'description' ) ;
	GetE('txtMetaAuthor').value			= GetMetadata( 'author' ) ;
	GetE('txtMetaCopyright').value		= GetMetadata( 'copyright' ) ;
}

// Called when the "Ok" button is clicked.
function Ok()
{
	// ### General Info
	FCK.EditorDocument.title = GetE('txtPageTitle').value ;

	var oHTML = FCK.EditorDocument.getElementsByTagName('html')[0] ;

	SetAttribute( oHTML, 'dir'		, GetE('selDirection').value ) ;
	SetAttribute( oHTML, 'lang'		, GetE('txtLang').value ) ;
	SetAttribute( oHTML, 'xml:lang'	, GetE('txtLang').value ) ;

	// Character Set Enconding.
	var sCharSet = GetE('selCharSet').value ;
	if ( sCharSet == '...' )
		sCharSet = GetE('txtCustomCharSet').value ;

	if ( sCharSet.length > 0 )
			sCharSet = 'text/html; charset=' + sCharSet ;

//	if ( document.all )
//		FCK.EditorDocument.charset = sCharSet ;
//	else
		SetMetadata( 'Content-Type', sCharSet, true ) ;

	// Document Type
	var sDocType = GetE('selDocType').value ;
	if ( sDocType == '...' )
		sDocType = GetE('txtDocType').value ;

	FCK.DocTypeDeclaration = sDocType ;

	// XHTML Declarations.
	if ( GetE('chkIncXHTMLDecl').checked )
	{
		if ( sCharSet.length == 0 )
			sCharSet = 'utf-8' ;

		FCK.XmlDeclaration = '<?xml version="1.0" encoding="' + sCharSet + '"?>' ;

		SetAttribute( oHTML, 'xmlns', 'http://www.w3.org/1999/xhtml' ) ;
	}
	else
	{
		FCK.XmlDeclaration = null ;
		oHTML.removeAttribute( 'xmlns', 0 ) ;
	}

	// ### Background
	SetAttribute( oBody, 'bgcolor'		, GetE('txtBackColor').value ) ;
	SetAttribute( oBody, 'background'	, GetE('txtBackImage').value ) ;
	SetAttribute( oBody, 'bgproperties'	, GetE('chkBackNoScroll').checked ? 'fixed' : '' ) ;

	// ### Colors
	SetAttribute( oBody, 'text'	, GetE('txtColorText').value ) ;
	SetAttribute( oBody, 'link'	, GetE('txtColorLink').value ) ;
	SetAttribute( oBody, 'vlink', GetE('txtColorVisited').value ) ;
	SetAttribute( oBody, 'alink', GetE('txtColorActive').value ) ;

	// ### Margins
	SetAttribute( oBody, 'topmargin'	, GetE('txtMarginTop').value ) ;
	SetAttribute( oBody, 'leftmargin'	, GetE('txtMarginLeft').value ) ;
	SetAttribute( oBody, 'rightmargin'	, GetE('txtMarginRight').value ) ;
	SetAttribute( oBody, 'bottommargin'	, GetE('txtMarginBottom').value ) ;

	// ### Meta data
	SetMetadata( 'keywords'		, GetE('txtMetaKeywords').value ) ;
	SetMetadata( 'description'	, GetE('txtMetaDescription').value ) ;
	SetMetadata( 'author'		, GetE('txtMetaAuthor').value ) ;
	SetMetadata( 'copyright'	, GetE('txtMetaCopyright').value ) ;

	return true ;
}

var bPreviewIsLoaded = false ;
var oPreviewWindow ;
var oPreviewBody ;

// Called by the Preview page when loaded.
function OnPreviewLoad( previewWindow, previewBody )
{
	oPreviewWindow	= previewWindow ;
	oPreviewBody	= previewBody ;

	bPreviewIsLoaded = true ;
	UpdatePreview() ;
}

function UpdatePreview()
{
	if ( !bPreviewIsLoaded )
		return ;

	// ### Background
	SetAttribute( oPreviewBody, 'bgcolor'		, GetE('txtBackColor').value ) ;
	SetAttribute( oPreviewBody, 'background'	, GetE('txtBackImage').value ) ;
	SetAttribute( oPreviewBody, 'bgproperties'	, GetE('chkBackNoScroll').checked ? 'fixed' : '' ) ;

	// ### Colors
	SetAttribute( oPreviewBody, 'text', GetE('txtColorText').value ) ;

	oPreviewWindow.SetLinkColor( GetE('txtColorLink').value ) ;
	oPreviewWindow.SetVisitedColor( GetE('txtColorVisited').value ) ;
	oPreviewWindow.SetActiveColor( GetE('txtColorActive').value ) ;
}

function CheckOther( combo, txtField )
{
	var bNotOther = ( combo.value != '...' ) ;

	GetE(txtField).style.backgroundColor = ( bNotOther ? '#cccccc' : '' ) ;
	GetE(txtField).disabled = bNotOther ;
}

function SetColor( inputId, color )
{
	GetE( inputId ).value = color + '' ;
	UpdatePreview() ;
}

function SelectBackColor( color )		{ SetColor('txtBackColor', color ) ; }
function SelectColorText( color )		{ SetColor('txtColorText', color ) ; }
function SelectColorLink( color )		{ SetColor('txtColorLink', color ) ; }
function SelectColorVisited( color )	{ SetColor('txtColorVisited', color ) ; }
function SelectColorActive( color )		{ SetColor('txtColorActive', color ) ; }

function SelectColor( wich )
{
	switch ( wich )
	{
		case 'Back'			: oEditor.FCKDialog.OpenDialog( 'FCKDialog_Color', FCKLang.DlgColorTitle, 'dialog/fck_colorselector.html', 400, 330, SelectBackColor, window ) ; return ;
		case 'ColorText'	: oEditor.FCKDialog.OpenDialog( 'FCKDialog_Color', FCKLang.DlgColorTitle, 'dialog/fck_colorselector.html', 400, 330, SelectColorText, window ) ; return ;
		case 'ColorLink'	: oEditor.FCKDialog.OpenDialog( 'FCKDialog_Color', FCKLang.DlgColorTitle, 'dialog/fck_colorselector.html', 400, 330, SelectColorLink, window ) ; return ;
		case 'ColorVisited'	: oEditor.FCKDialog.OpenDialog( 'FCKDialog_Color', FCKLang.DlgColorTitle, 'dialog/fck_colorselector.html', 400, 330, SelectColorVisited, window ) ; return ;
		case 'ColorActive'	: oEditor.FCKDialog.OpenDialog( 'FCKDialog_Color', FCKLang.DlgColorTitle, 'dialog/fck_colorselector.html', 400, 330, SelectColorActive, window ) ; return ;
	}
}

function BrowseServerBack()
{
	OpenFileBrowser( FCKConfig.ImageBrowserURL, FCKConfig.ImageBrowserWindowWidth, FCKConfig.ImageBrowserWindowHeight ) ;
}

function SetUrl( url )
{
	GetE('txtBackImage').value = url ;
	UpdatePreview() ;
}

		</SCRIPT>

<META content="MSHTML 6.00.2800.1400" name=GENERATOR></HEAD>
<BODY style="OVERFLOW: hidden" scroll=no>
<TABLE height="100%" cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top height="100%">
      <DIV id=divGeneral><SPAN fckLang="DlgDocPageTitle">Page 
      Title</SPAN><BR><INPUT id=txtPageTitle style="WIDTH: 100%"> <BR>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD><SPAN fckLang="DlgDocLangDir">Language 
            Direction</SPAN><BR><SELECT id=selDirection> <OPTION value="" 
              selected></OPTION> <OPTION value=ltr 
              fckLang="DlgDocLangDirLTR">Left to Right (LTR)</OPTION> <OPTION 
              value=rtl fckLang="DlgDocLangDirRTL">Right to Left 
            (RTL)</OPTION></SELECT> </TD>
          <TD>&nbsp;&nbsp;&nbsp;</TD>
          <TD><SPAN fckLang="DlgDocLangCode">Language Code</SPAN><BR><INPUT 
            id=txtLang> </TD></TR></TBODY></TABLE><BR>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD noWrap><SPAN fckLang="DlgDocCharSet">Character Set 
            Encoding</SPAN><BR><SELECT id=selCharSet 
            onchange="CheckOther( this, 'txtCustomCharSet' );"> <OPTION 
              value="" selected></OPTION> <OPTION value=us-ascii>ASCII</OPTION> 
              <OPTION value=iso-8859-2>Central European</OPTION> <OPTION 
              value=big5>Chinese Traditional (Big5)</OPTION> <OPTION 
              value=iso-8859-5>Cyrillic</OPTION> <OPTION 
              value=iso-8859-7>Greek</OPTION> <OPTION 
              value=iso-2022-jp>Japanese</OPTION> <OPTION 
              value=iso-2022-kr>Korean</OPTION> <OPTION 
              value=iso-8859-9>Turkish</OPTION> <OPTION value=utf-8>Unicode 
              (UTF-8)</OPTION> <OPTION value=iso-8859-1>Western 
              European</OPTION> <OPTION value=... 
              fckLang="DlgOpOther">&lt;Other&gt;</OPTION></SELECT> </TD>
          <TD>&nbsp;&nbsp;&nbsp;</TD>
          <TD width="100%"><SPAN fckLang="DlgDocCharSetOther">Other Character 
            Set Encoding</SPAN><BR><INPUT id=txtCustomCharSet 
            style="WIDTH: 100%; BACKGROUND-COLOR: #cccccc" disabled> </TD></TR>
        <TR>
          <TD colSpan=3>&nbsp;</TD></TR>
        <TR>
          <TD noWrap><SPAN fckLang="DlgDocDocType">Document Type 
            Heading</SPAN><BR><SELECT id=selDocType 
            onchange="CheckOther( this, 'txtDocType' );" name=selDocType> 
              <OPTION value="" selected></OPTION> <OPTION 
              value='<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">'>HTML 
              4.01 Transitional</OPTION> <OPTION 
              value='<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">'>HTML 
              4.01 Strict</OPTION> <OPTION 
              value='<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">'>HTML 
              4.01 Frameset</OPTION> <OPTION 
              value='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'>XHTML 
              1.0 Transitional</OPTION> <OPTION 
              value='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">'>XHTML 
              1.0 Strict</OPTION> <OPTION 
              value='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">'>XHTML 
              1.0 Frameset</OPTION> <OPTION 
              value='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'>XHTML 
              1.1</OPTION> <OPTION 
              value='<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">'>HTML 
              3.2</OPTION> <OPTION 
              value='<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">'>HTML 
              2.0</OPTION> <OPTION value=... 
              fckLang="DlgOpOther">&lt;Other&gt;</OPTION></SELECT> </TD>
          <TD></TD>
          <TD width="100%"><SPAN fckLang="DlgDocDocTypeOther">Other Document 
            Type Heading</SPAN><BR><INPUT id=txtDocType 
            style="WIDTH: 100%; BACKGROUND-COLOR: #cccccc" disabled> 
        </TD></TR></TBODY></TABLE><BR><INPUT id=chkIncXHTMLDecl type=checkbox> 
      <LABEL for=chkIncXHTMLDecl fckLang="DlgDocIncXHTML">Include XHTML 
      Declarations</LABEL> </DIV>
      <DIV id=divBackground style="DISPLAY: none"><SPAN 
      fckLang="DlgDocBgColor">Background Color</SPAN><BR><INPUT id=txtBackColor 
      onkeyup=UpdatePreview(); onchange=UpdatePreview();>&nbsp;<INPUT id=btnSelBackColor onclick="SelectColor( 'Back' )" type=button value=Select... fckLang="DlgCellBtnSelect"><BR><BR><SPAN 
      fckLang="DlgDocBgImage">Background Image URL</SPAN><BR>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD width="100%"><INPUT id=txtBackImage onkeyup=UpdatePreview(); 
            style="WIDTH: 100%" onchange=UpdatePreview();></TD>
          <TD id=tdBrowse noWrap>&nbsp;<INPUT id=btnBrowse onclick=BrowseServerBack(); type=button value="Browse Server" fckLang="DlgBtnBrowseServer"></TD></TR></TBODY></TABLE><INPUT 
      id=chkBackNoScroll onclick=UpdatePreview(); type=checkbox> <LABEL 
      for=chkBackNoScroll fckLang="DlgDocBgNoScroll">Nonscrolling 
      Background</LABEL> </DIV>
      <DIV id=divColors style="DISPLAY: none">
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD><SPAN fckLang="DlgDocCText">Text</SPAN><BR><INPUT 
            id=txtColorText onkeyup=UpdatePreview(); onchange=UpdatePreview();><INPUT onclick="SelectColor( 'ColorText' )" type=button value=Select... fckLang="DlgCellBtnSelect"> 
            <BR><SPAN fckLang="DlgDocCLink">Link</SPAN><BR><INPUT 
            id=txtColorLink onkeyup=UpdatePreview(); onchange=UpdatePreview();><INPUT onclick="SelectColor( 'ColorLink' )" type=button value=Select... fckLang="DlgCellBtnSelect"> 
            <BR><SPAN fckLang="DlgDocCVisited">Visited Link</SPAN><BR><INPUT 
            id=txtColorVisited onkeyup=UpdatePreview(); 
            onchange=UpdatePreview();><INPUT onclick="SelectColor( 'ColorVisited' )" type=button value=Select... fckLang="DlgCellBtnSelect"> 
            <BR><SPAN fckLang="DlgDocCActive">Active Link</SPAN><BR><INPUT 
            id=txtColorActive onkeyup=UpdatePreview(); 
onchange=UpdatePreview();><INPUT onclick="SelectColor( 'ColorActive' )" type=button value=Select... fckLang="DlgCellBtnSelect"> 
          </TD>
          <TD vAlign=center align=middle>
            <TABLE cellSpacing=2 cellPadding=0 border=0>
              <TBODY>
              <TR>
                <TD><SPAN fckLang="DlgDocMargins">Page Margins</SPAN></TD></TR>
              <TR>
                <TD 
                style="BORDER-RIGHT: #000000 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #000000 1px solid; PADDING-LEFT: 5px; PADDING-BOTTOM: 5px; BORDER-LEFT: #000000 1px solid; PADDING-TOP: 5px; BORDER-BOTTOM: #000000 1px solid">
                  <TABLE dir=ltr cellSpacing=0 cellPadding=0 border=0>
                    <TBODY>
                    <TR>
                      <TD align=middle colSpan=3><SPAN 
                        fckLang="DlgDocMaTop">Top</SPAN><BR><INPUT 
                        id=txtMarginTop size=3> </TD></TR>
                    <TR>
                      <TD align=left><SPAN 
                        fckLang="DlgDocMaLeft">Left</SPAN><BR><INPUT 
                        id=txtMarginLeft size=3> </TD>
                      <TD>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
                      <TD align=right><SPAN 
                        fckLang="DlgDocMaRight">Right</SPAN><BR><INPUT 
                        id=txtMarginRight size=3> </TD></TR>
                    <TR>
                      <TD align=middle colSpan=3><SPAN 
                        fckLang="DlgDocMaBottom">Bottom</SPAN><BR><INPUT 
                        id=txtMarginBottom size=3> 
              </TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></DIV>
      <DIV id=divMeta style="DISPLAY: none"><SPAN 
      fckLang="DlgDocMeIndex">Document Indexing Keywords (comma 
      separated)</SPAN><BR><TEXTAREA id=txtMetaKeywords style="WIDTH: 100%"></TEXTAREA> 
      <BR><SPAN fckLang="DlgDocMeDescr">Document Description</SPAN><BR><TEXTAREA id=txtMetaDescription style="WIDTH: 100%" rows=4></TEXTAREA> 
      <BR><SPAN fckLang="DlgDocMeAuthor">Author</SPAN><BR><INPUT 
      id=txtMetaAuthor style="WIDTH: 100%"><BR><BR><SPAN 
      fckLang="DlgDocMeCopy">Copyright</SPAN><BR><INPUT id=txtMetaCopyright 
      style="WIDTH: 100%"> </DIV></TD></TR>
  <TR id=ePreview style="DISPLAY: none">
    <TD><SPAN fckLang="DlgDocPreview">Preview</SPAN><BR><IFRAME id=frmPreview 
      src="res://C:\WINDOWS\System32\shdoclc.dll/dnserror.htm" width="100%" 
      height=100></IFRAME></TD></TR></TBODY></TABLE></BODY></HTML>
